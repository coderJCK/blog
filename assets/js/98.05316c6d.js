(window.webpackJsonp=window.webpackJsonp||[]).push([[98],{393:function(v,e,l){"use strict";l.r(e);var _=l(4),a=Object(_.a)({},(function(){var v=this,e=v._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h2",{attrs:{id:"浏览器性能优化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#浏览器性能优化"}},[v._v("#")]),v._v(" 浏览器性能优化")]),v._v(" "),e("blockquote",[e("p",[v._v("1.减少http请求。合并 CSS 和 JavaScript 文件\n2.缓存策略。合理设置 HTTP 缓存头，对于不经常变化的资源（如静态的 CSS、JavaScript、图片等）设置较长的缓存时间，减少重复请求。可以使用 Cache - Control 和 Expires 等头信息来控制缓存。\n3.优化图片。选择合适的图片格式、合理使用雪碧图\n4.延迟加载、懒加载\n5.优化代码。压缩CSS和JS文件，去除不必要的空格、注释等。\n6.优化渲染。避免频繁触发回流和重绘。")])]),v._v(" "),e("h2",{attrs:{id:"webpack"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#webpack"}},[v._v("#")]),v._v(" webpack")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("webpack的构建分析插件")]),v._v(" "),e("ul",[e("li",[v._v("构建速度分析(speed-measure-webpack-plugin)")]),v._v(" "),e("li",[v._v("打包大小分析(webpack-bundle-analyzer)")])])]),v._v(" "),e("li",[e("p",[v._v("速度优化")]),v._v(" "),e("ul",[e("li",[v._v("说明webpack的构建过程")]),v._v(" "),e("li",[v._v("1、减少查找范围\n"),e("ul",[e("li",[v._v("更改查找顺序(默认情况下，Webpack 会先在 node_modules目录下查找)")]),v._v(" "),e("li",[v._v("alias 配置别名路径")]),v._v(" "),e("li",[v._v("extensions 指定文件扩展名")]),v._v(" "),e("li",[v._v("noParse 忽略对某些模块的解析，适用于那些没有依赖的库")]),v._v(" "),e("li",[v._v("合理使用exclude 和 include")])])]),v._v(" "),e("li",[v._v("2、减少解析范围\n"),e("ul",[e("li",[v._v("避免重复编译第三方库，三方库单独打包")]),v._v(" "),e("li",[v._v("尽量避免使用不必要的插件和loader，使用轻量插件")]),v._v(" "),e("li",[v._v("代码分割: 将应用程序分割成更小的代码块，按需加载")])])]),v._v(" "),e("li",[v._v("3、开启多进程\n"),e("ul",[e("li",[v._v("多进程打包 thread-loader, 构建时间缩少一半左右")])])]),v._v(" "),e("li",[v._v("4、开启缓存\n"),e("ul",[e("li",[v._v("cache-loader插件")]),v._v(" "),e("li",[v._v("开始持久化缓存")])])]),v._v(" "),e("li",[v._v("5、开启热更新")]),v._v(" "),e("li",[v._v("6、区分环境,设置不同配置")])])]),v._v(" "),e("li",[e("p",[v._v("体积优化")]),v._v(" "),e("ul",[e("li",[v._v("js代码压缩 terser-webpack-plugin插件")]),v._v(" "),e("li",[v._v("css代码压缩 css-minimizer-webpack-plugin插件")]),v._v(" "),e("li",[v._v("tree-shaking 只打包使用到的代码(webpack5 mode:'production'自动开启)")]),v._v(" "),e("li",[v._v("source-map类型")])])])]),v._v(" "),e("h2",{attrs:{id:"vite"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vite"}},[v._v("#")]),v._v(" vite")])])}),[],!1,null,null,null);e.default=a.exports}}]);