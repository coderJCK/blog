(window.webpackJsonp=window.webpackJsonp||[]).push([[96],{394:function(s,t,a){"use strict";a.r(t);var n=a(4),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"浏览器渲染引擎"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浏览器渲染引擎"}},[s._v("#")]),s._v(" 浏览器渲染引擎")]),s._v(" "),t("ol",[t("li",[s._v("Trident（IE 浏览器）")]),s._v(" "),t("li",[s._v("Gecko（Firefox ）")]),s._v(" "),t("li",[s._v("Blink（Chrome、Opera ）")]),s._v(" "),t("li",[s._v("WebKit（Safari）")])]),s._v(" "),t("h2",{attrs:{id:"浏览器事件循环机制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浏览器事件循环机制"}},[s._v("#")]),s._v(" 浏览器事件循环机制")]),s._v(" "),t("ol",[t("li",[s._v("调用栈：\n是存储函数调用的栈结构。当执行一个函数时，会将该函数压入栈中，函数执行完毕后，从栈中弹出（先进后出原则）。")]),s._v(" "),t("li",[s._v("任务队列。\n包括宏任务队列和微任务队列。宏任务如 setTimeout、setInterval、script（整体代码）、I/O 操作、UI rendering 等；微任务如 Promise.then、MutationObserver、process.nextTick（Node.js 环境）等。")]),s._v(" "),t("li",[s._v("事件循环过程。\n首先执行调用栈中的同步任务，当调用栈为空时，事件循环开始工作。\n它会先检查微任务队列，如果有微任务，就将它们依次压入调用栈执行，直到微任务队列为空。\n检查宏任务队列，取出一个宏任务放入调用栈执行，直到宏任务队列为空。\n再次检查队列，重复上述过程，如此循环。")])]),s._v(" "),t("h2",{attrs:{id:"浏览器中输入一个-url-并回车后-浏览器都经历了哪些步骤来呈现页面"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浏览器中输入一个-url-并回车后-浏览器都经历了哪些步骤来呈现页面"}},[s._v("#")]),s._v(" 浏览器中输入一个 URL 并回车后，浏览器都经历了哪些步骤来呈现页面")]),s._v(" "),t("ol",[t("li",[s._v("DNS解析\n当你输入一个 URL 并回车，浏览器首先要做的是把域名解析为对应的 IP 地址。因为计算机网络中，设备之间通信是基于 IP 地址的。")]),s._v(" "),t("li",[s._v("TCP连接\n拿到 IP 地址后，浏览器会通过 TCP 协议与服务器建立连接。TCP 是一种面向连接的、可靠的、字节流协议。“三次握手”")]),s._v(" "),t("li",[s._v("HTTP请求\n连接建立成功后，浏览器会根据 URL 中的信息构建一个 HTTP 请求报文，包含请求方法、请求头和请求体，然后将这个请求发送给服务器。")]),s._v(" "),t("li",[s._v("服务器处理请求\n服务器接收到请求后，会根据请求的内容进行相应的处理。")]),s._v(" "),t("li",[s._v("HTTP响应\n服务器将构建好的响应报文发送回浏览器。浏览器接收到响应后，首先会检查响应状态码，判断请求是否成功。")]),s._v(" "),t("li",[s._v("浏览器渲染")]),s._v(" "),t("li",[s._v("TCP连接关闭\n页面渲染完成后，浏览器和服务器之间的 TCP 连接通常会根据 HTTP 协议的配置（如 Connection 头字段）决定是否关闭。如果是持久连接（Connection: keep - alive），连接会保持一段时间，以便后续的请求可以复用；如果是短连接（Connection: close），则会立即关闭连接。")])]),s._v(" "),t("h2",{attrs:{id:"浏览器渲染流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浏览器渲染流程"}},[s._v("#")]),s._v(" 浏览器渲染流程")]),s._v(" "),t("p",[s._v("----渲染主线程来完成")]),s._v(" "),t("ol",[t("li",[s._v("解析。得到DOM和CSSOM树")]),s._v(" "),t("li",[s._v("样式计算。生成带有样式的DOM树。\n继承、源（开发样式、本地样式表、 默认样式）、选择器权重、次序等因素")]),s._v(" "),t("li",[s._v("布局。生成布局树，主要是几何相关的属性。")]),s._v(" "),t("li",[s._v("分层。对布局树分层，主要是堆叠相关的属性。\n----合成线程来完成")]),s._v(" "),t("li",[s._v("绘制。对每个层生成绘制指令。")]),s._v(" "),t("li",[s._v("分块。对每个层进行分块。")]),s._v(" "),t("li",[s._v("光栅化。对每个块生成位图。")]),s._v(" "),t("li",[s._v("画。通过位图呈现效果")])]),s._v(" "),t("h2",{attrs:{id:"重绘-回流"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#重绘-回流"}},[s._v("#")]),s._v(" 重绘 & 回流")]),s._v(" "),t("ol",[t("li",[s._v("重绘。修改DOM样式，但未影响几何属性，直接回到绘制阶段即可。")]),s._v(" "),t("li",[s._v("回流。修改DOM样式，影响几何属性，需要进行样式计算，并重新布局，相当于刷新页面。\n几何相关的属性：\n移动、删除、增加、修改节点尺寸等操作；\n获取一些特定属性的值（offsetHeight、clientHeight...）；\n手动调用getComputedStyle方法等；")])]),s._v(" "),t("h2",{attrs:{id:"浏览器同源策略"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浏览器同源策略"}},[s._v("#")]),s._v(" 浏览器同源策略")]),s._v(" "),t("ul",[t("li",[s._v("同源策略\n就是指浏览器从一个源（协议、域名、端口三者相同）加载的资源，默认情况下是不能访问另一个源的资源的，这是为了保证用户信息的安全，防止不同源的脚本访问和操作其他源的敏感数据。")]),s._v(" "),t("li",[s._v("解决跨域问题")])]),s._v(" "),t("ol",[t("li",[s._v("代理服务器。在开发环境中，可以使用 Webpack 等工具的代理功能，在生产环境中，可以使用 Nginx 等服务器软件配置反向代理。")]),s._v(" "),t("li",[s._v("CORS。CORS 只需要服务端/后端支持即可，不涉及前端改动，依赖服务端/后端在响应头中添加 Access-Control-Allow-* 头。")]),s._v(" "),t("li",[s._v("JsonP。JSONP 的原理很简单，就是利用 "),t("em",[s._v("script")]),s._v("标签没有跨域限制的漏洞。通过 "),t("em",[s._v("script")]),s._v("标签指向一个需要访问的地址并提供一个回调函数来接收数据。JSONP 使用简单且兼容性不错，但是只限于 get 请求。")]),s._v(" "),t("li",[s._v("webSocket。webSocket本身不存在跨域问题，所以我们可以利用webSocket来进行非同源之间的通信")]),s._v(" "),t("li",[s._v("postMessage、document.domain（不常用）")])]),s._v(" "),t("h2",{attrs:{id:"浏览器存储"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浏览器存储"}},[s._v("#")]),s._v(" 浏览器存储")]),s._v(" "),t("p",[s._v("数据大小——有效期——作用域——用途")]),s._v(" "),t("ol",[t("li",[s._v("cookie\n4kb\n有效期/会话期（即关闭浏览器即失效）\n当前域及其子域（每次都会携带在 header 中，对于请求性能影响）\n保存用户登录状态、跟踪用户会话等；")]),s._v(" "),t("li",[s._v("localStorage\n5mb\n永久存储\n同源策略\n适合存储仅在当前会话中使用的数据，如表单填写过程中的临时数据")]),s._v(" "),t("li",[s._v("sessionStorage\n5mb\n会话期\n同源策略\n适合存储不经常变化且不需要发送到服务器的数据，如用户的个性化设置等")]),s._v(" "),t("li",[s._v("indexedDB。\n取决于硬盘空间\n永久存储\n同源策略\n离线应用、大数据缓存等")])]),s._v(" "),t("h2",{attrs:{id:"浏览器缓存策略"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浏览器缓存策略"}},[s._v("#")]),s._v(" 浏览器缓存策略")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("强缓存")]),s._v(" "),t("p",[s._v("  浏览器在加载资源时，先检查本地缓存中是否有该资源，并且该资源是否在有效期内。如果在有效期内，浏览器直接从缓存中加载资源，不会向服务器发送请求。\n相关 HTTP 头字段")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("Cache - Control")]),s._v("：是 HTML5 开始支持的属性，优先级高于 Expires。例如，Cache - Control: max - age = 31536000 表示资源在 31536000 秒（1 年）内有效，在此期间浏览器直接从缓存读取资源。还可以有其他取值，如 no - cache 表示不使用强缓存，而是直接进入协商缓存流程；no - store 表示禁止浏览器和中间缓存存储任何版本的资源。")]),s._v(" "),t("li",[t("strong",[s._v("Expires")]),s._v("：是 HTTP 1.0 时的规范，它指定一个绝对的过期时间点。例如，Expires: Thu, 01 Dec 2025 16:00:00 GMT，当浏览器请求时间在这个时间之前，就会使用缓存。但由于它是基于服务器时间，若服务器时间与客户端时间不一致，可能导致缓存判断失误，所以逐渐被 Cache - Control 替代。")])])]),s._v(" "),t("li",[t("p",[s._v("协商缓存")]),s._v(" "),t("p",[s._v("当强缓存失效（如缓存过期或 Cache - Control 设置为 no - cache）时，浏览器会向服务器发送请求，询问服务器该资源是否有更新。如果资源没有更新，服务器返回 304 Not Modified 状态码，浏览器则从本地缓存加载资源；如果资源有更新，服务器返回 200 OK 状态码及最新资源。\n相关 HTTP 头字段：\n"),t("em",[s._v("Last - Modified")]),s._v(" 和 "),t("em",[s._v("If - Modified - Since")]),s._v("：服务器在响应头中使用 Last - Modified 字段告知浏览器该资源的最后修改时间，例如 Last - Modified: Thu, 14 Feb 2025 12:00:00 GMT。浏览器下次请求时，会在请求头中带上 If - Modified - Since 字段，其值为上次服务器返回的 Last - Modified 值。服务器接收到请求后，对比 If - Modified - Since 和资源实际的最后修改时间，如果一致则返回 304 Not Modified，否则返回最新资源及 200 OK。\n"),t("em",[s._v("ETag")]),s._v(" 和 "),t("em",[s._v("If - None - Match")]),s._v('：ETag 是服务器为资源生成的唯一标识，通常基于资源内容的哈希值等生成。例如，ETag: "56789abcdef"。浏览器下次请求时，在请求头中带上 If - None - Match 字段，值为上次服务器返回的 ETag。服务器对比 If - None - Match 和当前资源的 ETag，若一致则返回 304 Not Modified，否则返回最新资源及 200 OK。ETag 比 Last - Modified 更精确，因为即使文件修改时间相同，但内容不同时，ETag 也会不同。')])])]),s._v(" "),t("h2",{attrs:{id:"浏览器缓存位置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浏览器缓存位置"}},[s._v("#")]),s._v(" 浏览器缓存位置")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[s._v("从缓存位置上来说分为四种，并且各自有优先级，当依次查找缓存且都没有命中的时候，才会去请求网络\n")])])]),t("ol",[t("li",[s._v("Service Worker\n自由控制缓存哪些文件、如何匹配缓存、如何读取缓存，并且缓存是持续性的。\n当 Service Worker 没有命中缓存的时候，我们需要去调用 fetch 函数获取数据。也就是说，如果我们没有在 Service Worker 命中缓存的话，会根据缓存查找优先级去查找数据。但是不管我们是从 Memory Cache 中还是从网络请求中获取的数据，浏览器都会显示我们是从 Service Worker 中获取的内容。")]),s._v(" "),t("li",[s._v("Memory Cache\nMemory Cache 也就是内存中的缓存，读取内存中的数据肯定比磁盘快。但是内存缓存虽然读取高效，可是缓存持续性很短，会随着进程的释放而释放。 一旦我们关闭 Tab 页面，内存中的缓存也就被释放了。\n当我们访问过页面以后，再次刷新页面，可以发现很多数据都来自于内存缓存")]),s._v(" "),t("li",[s._v("Disk Cache\nDisk Cache 也就是存储在硬盘中的缓存，读取速度慢点，但是什么都能存储到磁盘中，比之 Memory Cache 胜在容量和存储时效性上。\n在所有浏览器缓存中，Disk Cache 覆盖面基本是最大的。它会根据 HTTP Herder 中的字段判断哪些资源需要缓存，哪些资源可以不请求直接使用，哪些资源已经过期需要重新请求。并且即使在跨站点的情况下，相同地址的资源一旦被硬盘缓存下来，就不会再次去请求数据")]),s._v(" "),t("li",[s._v("Push Cache\nPush Cache 是 HTTP/2 中的内容，当以上三种缓存都没有命中时，它才会被使用。并且缓存时间也很短暂，只在会话（Session）中存在，一旦会话结束就被释放。\nPush Cache 在国内能够查到的资料很少，也是因为 HTTP/2 在国内不够普及，但是 HTTP/2 将会是日后的一个趋势")]),s._v(" "),t("li",[s._v("网络请求")])]),s._v(" "),t("h2",{attrs:{id:"service-worker"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#service-worker"}},[s._v("#")]),s._v(" Service Worker")]),s._v(" "),t("ol",[t("li",[s._v("概念"),t("br"),s._v("\nService Worker 是运行在浏览器背后的独立线程，一般可以用来实现缓存功能。使用 Service Worker的话，传输协议必须为 HTTPS。因为 Service Worker 中涉及到请求拦截，所以必须使用 HTTPS 协议来保障安全。")]),s._v(" "),t("li",[s._v("使用\n注册 Service Worker\n监听到 install 事件以后就可以缓存需要的文件，\n用户访问时通过拦截请求的方式查询是否存在缓存，存在缓存的话就可以直接读取缓存文件，否则就去请求数据。")])]),s._v(" "),t("p",[s._v("代码实现")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// index.js")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("navigator"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("serviceWorker"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  navigator"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("serviceWorker\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("register")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'sw.js'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("then")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("registration")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'service worker 注册成功'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("catch")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("err")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'servcie worker 注册失败'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// sw.js")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 监听 `install` 事件，回调中缓存所需文件")]),s._v("\nself"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("addEventListener")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'install'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("e")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("waitUntil")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    caches"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("open")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'my-cache'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("then")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("cache")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" cache"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("addAll")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./index.html'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./index.js'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 拦截所有请求事件")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果缓存中已经有请求的数据就直接用缓存，否则去请求数据")]),s._v("\nself"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("addEventListener")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'fetch'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("e")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("respondWith")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    caches"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("match")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("request"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("then")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("response")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("response"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" response\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'fetch source'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("h2",{attrs:{id:"浏览器兼容性问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浏览器兼容性问题"}},[s._v("#")]),s._v(" 浏览器兼容性问题")]),s._v(" "),t("ol",[t("li",[s._v("HTML5\n一些新增的HTML5在某些浏览器中不支持")]),s._v(" "),t("li",[s._v("CSS样式兼容性\n旧版本的 Internet Explorer 对 CSS3 属性（如 border - radius、box - shadow 等）支持不佳。解决方法可以使用 CSS 前缀，如 -webkit -（Chrome、Safari）、-moz -（Firefox）、-ms -（IE）等")]),s._v(" "),t("li",[s._v("JS兼容性\nIE 浏览器早期使用 attachEvent 方法绑定事件，而现代浏览器使用 addEventListener。")])]),s._v(" "),t("p",[s._v("检测是否支持")]),s._v(" "),t("ol",[t("li",[s._v("HTML5检测\n对于 API 方法：可以通过检查全局对象是否存在该方法来检测。例如，检测浏览器是否支持 localStorage，可以使用"),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'localStorage'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" window"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* 支持 localStorage */")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("。\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//对于新的 HTML 元素：可以创建该元素并检查其是否存在。例如，检测 canvas 元素支持情")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" canvas "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" document"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("createElement")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'canvas'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("canvas"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("getContext"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* 支持 canvas */")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])])]),s._v(" "),t("li",[s._v("CSS3检测\n使用 Modernizr：它是一个 JavaScript 库，可以检测浏览器对各种 CSS3 和 HTML5 特性的支持情况。引入 Modernizr 库后，会在 html 元素上添加相应的类名来表示支持或不支持某个特性，如 no - border - radius 表示不支持 border - radius 属性。")])])])}),[],!1,null,null,null);t.default=e.exports}}]);